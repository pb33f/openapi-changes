name: Publish

on:
  repository_dispatch:
    types: [publish-event]

jobs:
  release_and_brew:
    name: Release and bump homebrew version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        id: go
        with:
          go-version: ^1.24

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}

  publish_npm:
    if: success() || failure()
    name: Publish to NPM
    needs: release_and_brew
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set version
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> "$GITHUB_OUTPUT"

      - name: Check version
        run: echo "Version ${{ github.event.client_payload.new-tag }}"

      - name: Use Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Setup Git user
        run: |
          git config --global user.name "pb33f github bot"
          git config --global user.email "github-bot@pb33f.io"

      - name: Create .npmrc file
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Bump NPM version
        run: npm --no-git-tag-version --allow-same-version version ${{ github.event.client_payload.new-tag }}

      - name: NPM publish
        run: npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  push_to_registries:
    if: success() || failure()
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            pb33f/openapi-changes
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.event.client_payload.new-tag }}
            type=raw,value=latest

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max pb33f/openapi-changes:${{ github.event.client_payload.new-tag }}, pb33f/openapi-changes:latest
